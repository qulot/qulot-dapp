# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
env:
  # github.repository as <account>/<repo>
  CONTAINER_NAME: qulot-dapp
  DOCKER_IMAGE: 270498/qulot-dapp:latest

jobs:
  lint_check:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Check out the repo'
        uses: 'actions/checkout@v3'

      - name: 'Install Node.js'
        uses: 'actions/setup-node@v3'
        with:
          cache: 'yarn'
          node-version: '18.x'

      - name: 'Install the dependencies'
        run: 'yarn install --immutable'

      - name: 'Lint the code'
        run: 'yarn lint'

  build_and_push:
    runs-on: ubuntu-latest
    needs: lint_check
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.DOCKER_IMAGE }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.DOCKER_IMAGE }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
